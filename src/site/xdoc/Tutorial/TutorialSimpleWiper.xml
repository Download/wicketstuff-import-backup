<?xml version="1.0"?>
<document>
	<properties>
		<title>DojoFX tutorial 1: A simple Wiper</title>
	</properties>

	<meta
		name="keyword"
		content="wicket, example, web, j2ee, java, tutorial, dojo, wiper, dojofx" />

<body>
<section name="A basic Wiper">
	<p>
		In this tutorial we will discuss how to make a basic Wiper in wicket. The wiper handler add's a wiping functionallity to Wicket components. This can be very handy when i.e. making a pulldownsection in a menu. Ok it's just eyecandy, but who doesn't like their webapplications being decorated :)<br/> 
		This tutorial will teach you how to attach a simple Wiper to a WebMarkupContainer.<br/>
	</p>
	<p>
        (We assume you have either checked out CVS (wicket.contrib.dojo), or downloaded a released version before beginning this tutorial)
	</p>
	<p>After this tutorial, your MarkupContainer looks like this:</p>
	<img src="images/wipe-animation.gif" alt="Wiper" />
	<p>Without some style it might not look like much, but with a bit of creativity you can use Wipers to make really cool components.<br/> 
	You might want to check out our other tutorials for more ideas.</p>
	<subsection name="Add a Wiper">
	<p>
		In general, the only thing you need to do to add a Wiper to your wicket app, is add the following line:
		
	</p>
		<source>
		componentToBeWiped.add(new FXOnClickWiper(duration, targetComponent));
		</source>
	<p>
		where of course the duration is the time of the animation and targetComponent is the trigger you wan't to attach the wiper to. You can even add a third attribute: true. This will set the visibilty of the component true when the page is loaded, so when true is added the componentToBeWiped will start wiped-in.
		
	</p>
	</subsection>
	<subsection name="Example: Wipe a WebMarkupContainer">
	<p>
	Suppose you have a Label which you want to click which triggers a WebMarkupContainer to wipe in.
	All you would need is the following code:
	</p>
	<p>In yourPage.java</p>
	<source>
	//create and add the components
	add(testtrigger=new Label("testtrigger","click me"));
	componentToBeWiped = new WebMarkupContainer("componentToBeWiped");
	componentToBeWiped.add(new Label("label1","LABEL 1"));
	componentToBeWiped.add(new Label("label2","LABEL 2"));
	componentToBeWiped.add(new Label("label3","LABEL 3"));
	componentToBeWiped.add(new Label("label4","LABEL 4"));
	
	//actually add the wiper
	componentToBeWiped.add(new FXOnClickWiper(500, testtrigger));
	</source><br/>
	<p>In yourPage.html</p>
	<source>
	<![CDATA[	
	<div wicket:id="testtrigger">a nice trigger </div>
	<div wicket:id="componentToBeWiped">
  	<div wicket:id="label1"></div>
	<div wicket:id="label2"></div>
	<div wicket:id="label3"></div>
	<div wicket:id="label4"></div>
	</div>
	]]>
	</source>
	<p>
	And voila, you're done!
	</p>
	</subsection>
</section>
</body>
</document>