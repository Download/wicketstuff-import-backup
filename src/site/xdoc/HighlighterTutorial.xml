<?xml version="1.0"?>
<document>
	<properties>
		<title>DojoFX tutorial 3: A simple Highlighter</title>
	</properties>

	<meta
		name="keyword"
		content="wicket, example, web, j2ee, java, tutorial, dojo" />

<body>
<section name="A simple Highlighter">
	<p>
		This tutorial covers the highlighter component. 
		It is basicly the same as the previous component we've made, the Wiper component.
		We are going to show you how to make a simple menubar with the highlighter component.
	</p>
	<p>
        Imagine you want a simple but slick-looking toolbar not entirely unlike this:
	</p>
	<img src="images/highlighter.gif" alt="Highlighter" />
	<p>
	When you are making a menubar in wicket and want to add a hghlight effect (who doen's want eye candy ;)) this is what you need. 
	For this example we did not implement the whole menu structure, because we only wanted to show you the effect.
	</p>
	<subsection name="MyPage.java">
	<p>
		Add a new WebMarkupContainer in your java file, in this case named menubar. 
		Now you want to add new labels because the bar needs them :)
		
		So you add to your page:
		<source>menubar.add(filemenu = new Label("filemenu", new Model("File")));</source> 
		Of course you have to repeat this for the number of menuitems you want.
		After adding the labels, you will have to add the effect. This is done by adding the following line: 
		<source>filemenu.add(new FXOnMouseOverHighlighter(200, filemenu, 255,102,0)); </source>
		Here 200 is the duration, filemenu is the trigger component (in this case, itself) and the three integers
		are the RGB values you want the items to highlight to.
	</p>
	<p> The complete java code looks like this:</p>
	<source>
	... instance fields
	
	add(menubar = new WebMarkupContainer("menubar"));
	menubar.add(filemenu = new Label("filemenu", new Model("File")));
	menubar.add(editmenu = new Label("editmenu", new Model("Edit")));
	menubar.add(viewmenu = new Label("viewmenu", new Model("View")));
	menubar.add(insertmenu = new Label("insertmenu", new Model("Insert")));
	menubar.add(modifymenu = new Label("modifymenu", new Model("Modify")));
	filemenu.add(new FXOnMouseOverHighlighter(200, filemenu, 255,102,0));
	editmenu.add(new FXOnMouseOverHighlighter(200, editmenu, 255,102,0));
	viewmenu.add(new FXOnMouseOverHighlighter(200, viewmenu, 255,102,0));
	insertmenu.add(new FXOnMouseOverHighlighter(200, insertmenu, 255,102,0));
	modifymenu.add(new FXOnMouseOverHighlighter(200, modifymenu, 255,102,0));
	</source>
	</subsection>
	<subsection name="MyPage.html">
	<p>
	After finnishing the java code you will have to add a few lines to your html file.
	
	In this case we put the contents plus markup in a table. 
	The only thing you need to add is a wicket:id. (obviously it has to correspond with the id's used in the java file.
	
	Below the example code:
	</p>
	<source><![CDATA[
	<style type="text/css">	
	.styleX {font-family: Verdana, Arial, Helvetica, sans-serif ;font-size: small}	
	</style>
	
	
	<table wicket:id="menubar" width="250" border="0" align="center" 
cellpadding="0" cellspacing="0" bgcolor="#ECE9D8"><br>
	<tr><br>
	<td><div wicket:id="filemenu" align="center" class="styleX">File</div></td><br>
	<td><div wicket:id="editmenu" align="center" class="styleX">Edit</div></td><br>
	<td><div wicket:id="viewmenu" align="center" class="styleX">View</div></td><br>
	<td><div wicket:id="insertmenu" align="center" class="styleX">Insert</div></td><br>
	<td><div wicket:id="modifymenu" align="center" class="styleX">Modify</div></td><br>
	</tr><br>
	</table>
	]]></source>
	</subsection>
	<subsection name="The result....">
	<p>
	And now you are finished :)<br/>
	Here's an animated picture of the result when you move your mouse over the "file" entry:	
	</p>
	<img src="images/highlighter_animated.gif" alt="Highlighter animated" />
	</subsection>
</section>
</body>
</document>