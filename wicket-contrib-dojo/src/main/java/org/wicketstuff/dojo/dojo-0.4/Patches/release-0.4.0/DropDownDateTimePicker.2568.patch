Index: src/widget/DropdownDatePicker.js
===================================================================
--- src/widget/DropdownDatePicker.js	2007-05-15 11:14:39.000000000 +0200
+++ src/widget/DropdownDatePicker.js	2007-05-15 11:13:55.000000000 +0200
@@ -128,6 +128,9 @@
 			this.containerNode.style.zIndex = this.zIndex;
 			this.containerNode.explodeClassName = "calendarBodyContainer";
 			this.valueNode.name=this.name;
+			
+			//Can disable the input if inputNotAllowed = true
+			this.inputNode.disabled = this.inputNotAllowed;
 		},
 
 		getValue: function(){
@@ -212,7 +215,7 @@
 		},
 		
 		enable: function() {
-			this.inputNode.disabled = false;
+			this.inputNode.disabled = this.inputNotAllowed;
 			this.datePicker.enable();
 			dojo.widget.DropdownDatePicker.superclass.enable.apply(this, arguments);
 		},
Index: src/widget/DropdownTimePicker.js
===================================================================
--- src/widget/DropdownTimePicker.js	2007-05-15 11:14:39.000000000 +0200
+++ src/widget/DropdownDatePicker.js	2007-05-15 11:13:55.000000000 +0200
@@ -40,6 +40,12 @@
 		//	time value in RFC3339 format (http://www.ietf.org/rfc/rfc3339.txt)
 		//	ex: 12:00
 		value: "",
+		
+		// 	name of the form element, used to create a hidden field by this name for form element submission.
+		name: "",
+		
+		//If true disabled the input from keyboard
+		inputNotAllowed:false,
 
 		templatePath: dojo.uri.dojoUri("src/widget/templates/TimePicker.htm"),
 		templateCssPath: dojo.uri.dojoUri("src/widget/templates/TimePicker.css"),
@@ -69,6 +75,12 @@
 				this.timePicker.initUI();
 				this.onSetTime();
 			}
+			
+			this.valueNode.name=this.name;
+			this.inputNode.name=this.name;
+
+			//Can disable the input if inputNotAllowed = true
+			this.inputNode.disabled = this.inputNotAllowed;
 		},
 		
 		onSetTime: function(){
@@ -97,7 +109,8 @@
 		
 		enable: function() {
 			// summary: enable this widget to accept user input
-			this.inputNode.disabled = false;
+			//Can disable the input if inputNotAllowed = true
+			this.inputNode.disabled = this.inputNotAllowed;
 			this.timePicker.enable();
 			dojo.widget.DropdownTimePicker.superclass.enable.apply(this, arguments);
 		},