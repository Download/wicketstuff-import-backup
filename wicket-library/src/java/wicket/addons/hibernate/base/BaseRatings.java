package wicket.addons.hibernate.base;

import java.io.Serializable;


/**
 * This class has been automatically generated by Hibernate Synchronizer.
 * For more information or documentation, visit The Hibernate Synchronizer page
 * at http://www.binamics.com/hibernatesync or contact Joe Hudson at joe@binamics.com.
 *
 * This is an object that contains data related to the ratings table.
 * Do not modify this class because it will be overwritten if the configuration file
 * related to this class is modified.
 *
 * @hibernate.class
 *  table="ratings"
 */
public abstract class BaseRatings  implements Serializable {

	public static String PROP_COMMENT = "Comment";
	public static String PROP_USER_ID = "UserId";
	public static String PROP_CREATE_DATE = "CreateDate";
	public static String PROP_ID = "Id";
	public static String PROP_RATING = "Rating";


	private int hashCode = Integer.MIN_VALUE;

	// primary key
	private java.lang.Integer _id;

	// fields
	private java.lang.Integer _userId;
	private java.lang.String _comment;
	private java.util.Date _createDate;
	private java.lang.Integer _rating;


	// constructors
	public BaseRatings () {
		initialize();
	}

	/**
	 * Constructor for primary key
	 */
	public BaseRatings (java.lang.Integer _id) {
		this.setId(_id);
		initialize();
	}

	/**
	 * Constructor for required fields
	 */
	public BaseRatings (
		java.lang.Integer _id,
		java.lang.Integer _userId,
		java.lang.String _comment,
		java.util.Date _createDate,
		java.lang.Integer _rating) {

		this.setId(_id);
		this.setUserId(_userId);
		this.setComment(_comment);
		this.setCreateDate(_createDate);
		this.setRating(_rating);
		initialize();
	}

	protected void initialize () {}



	/**
	 * Return the unique identifier of this class
     * @hibernate.id
     *  generator-class="identity"
     *  column="id"
     */
	public java.lang.Integer getId () {
		return _id;
	}

	/**
	 * Set the unique identifier of this class
	 * @param _id the new ID
	 */
	public void setId (java.lang.Integer _id) {
		this._id = _id;
		this.hashCode = Integer.MIN_VALUE;
	}


	/**
	 * Return the value associated with the column: userId
	 */
	public java.lang.Integer getUserId () {
		return _userId;
	}

	/**
	 * Set the value related to the column: userId
	 * @param _userId the userId value
	 */
	public void setUserId (java.lang.Integer _userId) {
		this._userId = _userId;
	}


	/**
	 * Return the value associated with the column: comment
	 */
	public java.lang.String getComment () {
		return _comment;
	}

	/**
	 * Set the value related to the column: comment
	 * @param _comment the comment value
	 */
	public void setComment (java.lang.String _comment) {
		this._comment = _comment;
	}


	/**
	 * Return the value associated with the column: createDate
	 */
	public java.util.Date getCreateDate () {
		return _createDate;
	}

	/**
	 * Set the value related to the column: createDate
	 * @param _createDate the createDate value
	 */
	public void setCreateDate (java.util.Date _createDate) {
		this._createDate = _createDate;
	}


	/**
	 * Return the value associated with the column: rating
	 */
	public java.lang.Integer getRating () {
		return _rating;
	}

	/**
	 * Set the value related to the column: rating
	 * @param _rating the rating value
	 */
	public void setRating (java.lang.Integer _rating) {
		this._rating = _rating;
	}


	public boolean equals (Object obj) {
		if (null == obj) return false;
		if (!(obj instanceof wicket.addons.hibernate.base.BaseRatings)) return false;
		else {
			wicket.addons.hibernate.base.BaseRatings mObj = (wicket.addons.hibernate.base.BaseRatings) obj;
			if (null == this.getId() || null == mObj.getId()) return false;
			else return (this.getId().equals(mObj.getId()));
		}
	}


	public int hashCode () {
		if (Integer.MIN_VALUE == this.hashCode) {
			if (null == this.getId()) return super.hashCode();
			else {
				String hashStr = this.getClass().getName() + ":" + this.getId().hashCode();
				this.hashCode = hashStr.hashCode();
			}
		}
		return this.hashCode;
	}


	public String toString () {
		return super.toString();
	}

}