package wicket.addons.hibernate.base;

import java.io.Serializable;


/**
 * This class has been automatically generated by Hibernate Synchronizer.
 * For more information or documentation, visit The Hibernate Synchronizer page
 * at http://www.binamics.com/hibernatesync or contact Joe Hudson at joe@binamics.com.
 *
 * This is an object that contains data related to the COMMENTS table.
 * Do not modify this class because it will be overwritten if the configuration file
 * related to this class is modified.
 *
 * @hibernate.class
 *  table="COMMENTS"
 */
public abstract class BaseComment  implements Serializable {

	public static String PROP_LAST_MODIFIED = "lastModified";
	public static String PROP_COMMENT = "comment";
	public static String PROP_USER = "user";
	public static String PROP_ADDON = "addon";
	public static String PROP_ID = "id";


	private int hashCode = Integer.MIN_VALUE;

	// primary key
	private int _id;

	// fields
	private java.util.Date _lastModified;
	private java.lang.String _comment;

	// many to one
	private wicket.addons.hibernate.User _user;
	private wicket.addons.hibernate.Addon _addon;


	// constructors
	public BaseComment () {
		initialize();
	}

	/**
	 * Constructor for primary key
	 */
	public BaseComment (int _id) {
		this.setId(_id);
		initialize();
	}

	/**
	 * Constructor for required fields
	 */
	public BaseComment (
		int _id,
		wicket.addons.hibernate.User _user,
		wicket.addons.hibernate.Addon _addon,
		java.util.Date _lastModified,
		java.lang.String _comment) {

		this.setId(_id);
		this.setUser(_user);
		this.setAddon(_addon);
		this.setLastModified(_lastModified);
		this.setComment(_comment);
		initialize();
	}

	protected void initialize () {}



	/**
	 * Return the unique identifier of this class
     * @hibernate.id
     *  generator-class="identity"
     *  column="id"
     */
	public int getId () {
		return _id;
	}

	/**
	 * Set the unique identifier of this class
	 * @param _id the new ID
	 */
	public void setId (int _id) {
		this._id = _id;
		this.hashCode = Integer.MIN_VALUE;
	}


	/**
	 * Return the value associated with the column: LASTMODIFIED
	 */
	public java.util.Date getLastModified () {
		return _lastModified;
	}

	/**
	 * Set the value related to the column: LASTMODIFIED
	 * @param _lastModified the LASTMODIFIED value
	 */
	public void setLastModified (java.util.Date _lastModified) {
		this._lastModified = _lastModified;
	}


	/**
	 * Return the value associated with the column: COMMENT
	 */
	public java.lang.String getComment () {
		return _comment;
	}

	/**
	 * Set the value related to the column: COMMENT
	 * @param _comment the COMMENT value
	 */
	public void setComment (java.lang.String _comment) {
		this._comment = _comment;
	}


	/**
     * @hibernate.property
     *  column=userId
	 * not-null=true
	 */
	public wicket.addons.hibernate.User getUser () {
		return this._user;
	}

	/**
	 * Set the value related to the column: userId
	 * @param _user the userId value
	 */
	public void setUser (wicket.addons.hibernate.User _user) {
		this._user = _user;
	}


	/**
     * @hibernate.property
     *  column=addonId
	 * not-null=true
	 */
	public wicket.addons.hibernate.Addon getAddon () {
		return this._addon;
	}

	/**
	 * Set the value related to the column: addonId
	 * @param _addon the addonId value
	 */
	public void setAddon (wicket.addons.hibernate.Addon _addon) {
		this._addon = _addon;
	}


	public boolean equals (Object obj) {
		if (null == obj) return false;
		if (!(obj instanceof wicket.addons.hibernate.base.BaseComment)) return false;
		else {
			wicket.addons.hibernate.base.BaseComment mObj = (wicket.addons.hibernate.base.BaseComment) obj;
			return (this.getId() == mObj.getId());
		}
	}


	public int hashCode () {
		if (Integer.MIN_VALUE == this.hashCode) {
			return (int) this.getId();
		}
		return this.hashCode;
	}


	public String toString () {
		return super.toString();
	}

}