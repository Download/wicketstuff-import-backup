<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
  
  

  
<link rel="stylesheet" type="text/css" href="http://static.jquery.com/ui/css/trac.css" />
<link rel="stylesheet" href="http://static.jquery.com/ui/css/base2.css" type="text/css" media="screen" />


  

  <head>
    <title>
      /trunk/ui/ui.droppable.js –
      jQuery UI Development – Trac
    </title>
        <link rel="search" href="/search" />
        <link rel="help" href="/wiki/TracGuide" />
        <link rel="alternate" href="/browser/trunk/ui/ui.droppable.js?format=txt" type="text/plain" title="Plain Text" /><link rel="alternate" href="/export/2847/trunk/ui/ui.droppable.js" type="text/javascript" title="Original Format" />
        <link rel="up" href="/browser/trunk/ui" title="Parent directory" />
        <link rel="start" href="/wiki" />
        <link rel="stylesheet" href="/chrome/common/css/trac.css" type="text/css" /><link rel="stylesheet" href="/chrome/common/css/code.css" type="text/css" /><link rel="stylesheet" href="/chrome/common/css/browser.css" type="text/css" />
        <link rel="shortcut icon" href="http://ui.jquery.com/images/favicon.ico" type="image/x-icon" />
        <link rel="icon" href="http://ui.jquery.com/images/favicon.ico" type="image/x-icon" />
      <link type="application/opensearchdescription+xml" rel="search" href="/search/opensearch" title="Search jQuery UI Development" />
    <script type="text/javascript" src="/chrome/common/js/jquery.js"></script><script type="text/javascript" src="/chrome/common/js/trac.js"></script><script type="text/javascript" src="/chrome/common/js/search.js"></script>
    <!--[if lt IE 7]>
    <script type="text/javascript" src="/chrome/common/js/ie_pre7_hacks.js"></script>
    <![endif]-->
    <script type="text/javascript">
      jQuery(document).ready(function($) {
        $("#jumploc input").hide();
        $("#jumploc select").change(function () {
          this.parentNode.parentNode.submit();
        })
      });
    </script>
</head>
  <body id="trac">
   <div id="wrapper">
	<div id="banner">
		<h1 class="logo">
			<a href="http://ui.jquery.com/home" title="jQuery UI"><span>jQuery UI</span></a>
		</h1>
		<div id="dock">
			<div class="left"></div>
			<ul>
				<li>
					<a href="http://jquery.com">jQuery</a>
				</li>
				<li style="padding-right: 12px;">
					<a href="http://plugins.jquery.com/">Plugins</a>
				</li>
				<li class="selected" style="padding-right: 12px;">
					<a href="http://jqueryui.com/home">UI</a>
				</li>
				<li style="padding-left: 12px;">
					<div style="background: #555; width: 1px; height: 24px; position: absolute; left: 0px;"></div>
					<a href="http://blog.jqueryui.com/">Blog</a>
				</li>
				<li>
					<a href="http://jqueryui.com/about">About</a>
				</li>
				<li>
					<a href="http://docs.jquery.com/Donate">Donate</a>
				</li>
			</ul>
			<div class="right"></div>
		</div>
		<div id="navigation">
			<div class="left"></div>
			<ul>
				<li>
					<a href="http://jqueryui.com/download">Download</a>
				</li>
				<li>
					<a href="http://jqueryui.com/demos">Demos &amp; Documentation</a>
				</li>
				<li>
					<a href="http://jqueryui.com/themeroller">Themes</a>
				</li>
				<li class="selected">
					<a href="http://jqueryui.com/development">Development</a>
				</li>
				<li class="last">
					<a href="http://jqueryui.com/support">Support</a>
				</li>
			</ul>
			<div class="right"></div>
		</div>
	</div>
	<div id="content-wrapper">
		<div id="content">
    <div id="banner">
      <div id="header">
        <h1><a href="">jQuery UI Development</a></h1>
      </div>
      <form id="search" action="/search" method="get">
        <div>
          <label for="proj-search">Search:</label>
          <input type="text" id="proj-search" name="q" size="18" value="" />
          <input type="submit" value="Search" />
        </div>
      </form>
      <div id="metanav" class="nav">
    <ul>
      <li class="first">logged in as lindner@visionet.de</li><li><a href="/logout">Logout</a></li><li><a href="/prefs">Preferences</a></li><li><a href="/wiki/TracGuide">Help/Guide</a></li><li class="last"><a href="/about">About Trac</a></li>
    </ul>
  </div>
    </div>
    <div id="mainnav" class="nav">
    <ul>
      <li class="first"><a href="/wiki">Wiki</a></li><li><a href="/timeline">Timeline</a></li><li><a href="/roadmap">Roadmap</a></li><li class="active"><a href="/browser">Browse Source</a></li><li><a href="/report">View Tickets</a></li><li><a href="/newticket">New Ticket</a></li><li class="last"><a href="/search">Search</a></li>
    </ul>
  </div>
    <div id="main">
      <div id="ctxtnav" class="nav">
        <h2>Context Navigation</h2>
          <ul>
            <li class="first "><a href="/changeset/2517/trunk/ui/ui.droppable.js">Last Change</a></li><li><a href="/browser/trunk/ui/ui.droppable.js?annotate=blame&amp;rev=2517" title="Annotate each line with the last changed revision (this can be time consuming...)">Annotate</a></li><li class="last"><a href="/log/trunk/ui/ui.droppable.js">Revision Log</a></li>
          </ul>
        <hr />
      </div>
    <div id="content" class="browser">
      <h1>
    <a class="pathentry first" title="Go to root directory" href="/browser">root</a><span class="pathentry sep">/</span><a class="pathentry" title="View trunk" href="/browser/trunk">trunk</a><span class="pathentry sep">/</span><a class="pathentry" title="View ui" href="/browser/trunk/ui">ui</a><span class="pathentry sep">/</span><a class="pathentry" title="View ui.droppable.js" href="/browser/trunk/ui/ui.droppable.js">ui.droppable.js</a>
    <br style="clear: both" />
  </h1>
      <div id="jumprev">
        <form action="" method="get">
          <div>
            <label for="rev">
              View revision:</label>
            <input type="text" id="rev" name="rev" size="6" />
          </div>
        </form>
      </div>
      <div id="jumploc">
        <form action="" method="get">
          <div class="buttons">
            <label for="preselected">Visit:</label>
            <select id="preselected" name="preselected">
              <option selected="selected"></option>
              <optgroup label="branches">
                <option value="/browser/trunk">trunk</option><option value="/browser/branches/a11y">branches/a11y</option><option value="/browser/branches/dev">branches/dev</option><option value="/browser/branches/labs">branches/labs</option>
              </optgroup><optgroup label="tags">
                <option value="/browser/tags/1.0?rev=747">tags/1.0</option><option value="/browser/tags/1.0.1a?rev=747">tags/1.0.1a</option><option value="/browser/tags/1.5?rev=747">tags/1.5</option><option value="/browser/tags/1.5.1?rev=747">tags/1.5.1</option><option value="/browser/tags/1.5.2?rev=747">tags/1.5.2</option><option value="/browser/tags/1.5.3?rev=2383">tags/1.5.3</option><option value="/browser/tags/1.5a?rev=747">tags/1.5a</option><option value="/browser/tags/1.5b?rev=747">tags/1.5b</option><option value="/browser/tags/1.5b2?rev=747">tags/1.5b2</option><option value="/browser/tags/1.5b3?rev=747">tags/1.5b3</option><option value="/browser/tags/1.5b4?rev=747">tags/1.5b4</option><option value="/browser/tags/1.5rc1?rev=747">tags/1.5rc1</option><option value="/browser/tags/1.6?rev=2465">tags/1.6</option><option value="/browser/tags/1.6b?rev=747">tags/1.6b</option><option value="/browser/tags/1.6rc1?rev=747">tags/1.6rc1</option><option value="/browser/tags/1.6rc2?rev=747">tags/1.6rc2</option><option value="/browser/tags/1.6rc2.5?rev=2289">tags/1.6rc2.5</option><option value="/browser/tags/1.6rc2.6?rev=2386">tags/1.6rc2.6</option><option value="/browser/tags/1.6rc3?rev=1444">tags/1.6rc3</option><option value="/browser/tags/1.6rc4?rev=1458">tags/1.6rc4</option><option value="/browser/tags/1.6rc5?rev=2023">tags/1.6rc5</option><option value="/browser/tags/1.6rc6?rev=2024">tags/1.6rc6</option><option value="/browser/tags/1.7?rev=2205">tags/1.7</option><option value="/browser/tags/1.7.1?rev=2497">tags/1.7.1</option><option value="/browser/tags/1.7.2?rev=2661">tags/1.7.2</option><option value="/browser/tags/latest?rev=2662">tags/latest</option><option value="/browser/tags/legacy?rev=2467">tags/legacy</option><option value="/browser/tags/testing?rev=2340">tags/testing</option>
              </optgroup>
            </select>
            <input type="submit" value="Go!" title="Jump to the chosen preselected path" />
          </div>
        </form>
      </div>
      <table id="info" summary="Revision info">
        <tr>
          <th scope="col">
            Revision <a href="/changeset/2517">2517</a>, <span title="9224 bytes">9.0 kB</span>
            (checked in by joern.zaefferer, <a class="timeline" href="/timeline?from=2009-05-11T05%3A32%3A43Z-0700&amp;precision=second" title="2009-05-11T05:32:43Z-0700 in Timeline">7 weeks</a> ago)
          </th>
        </tr>
        <tr>
          <td class="message searchable">
              <p>
Fix for <a class="closed ticket" href="/ticket/4282" title="bug: Droppable changes options object (closed: fixed)">#4282</a>, fixes 14 tests<br />
</p>
          </td>
        </tr>
        <tr>
          <td colspan="2">
            <ul class="props">
              <li>
                  Property <strong>svn:mime-type</strong> set to
                    <em><code>text/javascript</code></em>
              </li><li>
                  Property <strong>svn:eol-style</strong> set to
                    <em><code>native</code></em>
              </li>
            </ul>
          </td>
        </tr>
      </table>
      <div id="preview" class="searchable">
    <table class="code"><thead><tr><th class="lineno" title="Line numbers">Line</th><th class="content"> </th></tr></thead><tbody><tr><th id="L1"><a href="#L1">1</a></th><td>/*</td></tr><tr><th id="L2"><a href="#L2">2</a></th><td> * jQuery UI Droppable @VERSION</td></tr><tr><th id="L3"><a href="#L3">3</a></th><td> *</td></tr><tr><th id="L4"><a href="#L4">4</a></th><td> * Copyright (c) 2009 AUTHORS.txt (http://jqueryui.com/about)</td></tr><tr><th id="L5"><a href="#L5">5</a></th><td> * Dual licensed under the MIT (MIT-LICENSE.txt)</td></tr><tr><th id="L6"><a href="#L6">6</a></th><td> * and GPL (GPL-LICENSE.txt) licenses.</td></tr><tr><th id="L7"><a href="#L7">7</a></th><td> *</td></tr><tr><th id="L8"><a href="#L8">8</a></th><td> * http://docs.jquery.com/UI/Droppables</td></tr><tr><th id="L9"><a href="#L9">9</a></th><td> *</td></tr><tr><th id="L10"><a href="#L10">10</a></th><td> * Depends:</td></tr><tr><th id="L11"><a href="#L11">11</a></th><td> *      ui.core.js</td></tr><tr><th id="L12"><a href="#L12">12</a></th><td> *      ui.draggable.js</td></tr><tr><th id="L13"><a href="#L13">13</a></th><td> */</td></tr><tr><th id="L14"><a href="#L14">14</a></th><td>(function($) {</td></tr><tr><th id="L15"><a href="#L15">15</a></th><td></td></tr><tr><th id="L16"><a href="#L16">16</a></th><td>$.widget("ui.droppable", {</td></tr><tr><th id="L17"><a href="#L17">17</a></th><td></td></tr><tr><th id="L18"><a href="#L18">18</a></th><td>        _init: function() {</td></tr><tr><th id="L19"><a href="#L19">19</a></th><td></td></tr><tr><th id="L20"><a href="#L20">20</a></th><td>                var o = this.options, accept = o.accept;</td></tr><tr><th id="L21"><a href="#L21">21</a></th><td>                this.isover = 0; this.isout = 1;</td></tr><tr><th id="L22"><a href="#L22">22</a></th><td></td></tr><tr><th id="L23"><a href="#L23">23</a></th><td>                this.accept = $.isFunction(accept) ? accept : function(d) {</td></tr><tr><th id="L24"><a href="#L24">24</a></th><td>                        return d.is(accept);</td></tr><tr><th id="L25"><a href="#L25">25</a></th><td>                };</td></tr><tr><th id="L26"><a href="#L26">26</a></th><td></td></tr><tr><th id="L27"><a href="#L27">27</a></th><td>                //Store the droppable's proportions</td></tr><tr><th id="L28"><a href="#L28">28</a></th><td>                this.proportions = { width: this.element[0].offsetWidth, height: this.element[0].offsetHeight };</td></tr><tr><th id="L29"><a href="#L29">29</a></th><td></td></tr><tr><th id="L30"><a href="#L30">30</a></th><td>                // Add the reference and positions to the manager</td></tr><tr><th id="L31"><a href="#L31">31</a></th><td>                $.ui.ddmanager.droppables[o.scope] = $.ui.ddmanager.droppables[o.scope] || [];</td></tr><tr><th id="L32"><a href="#L32">32</a></th><td>                $.ui.ddmanager.droppables[o.scope].push(this);</td></tr><tr><th id="L33"><a href="#L33">33</a></th><td></td></tr><tr><th id="L34"><a href="#L34">34</a></th><td>                (o.addClasses &amp;&amp; this.element.addClass("ui-droppable"));</td></tr><tr><th id="L35"><a href="#L35">35</a></th><td></td></tr><tr><th id="L36"><a href="#L36">36</a></th><td>        },</td></tr><tr><th id="L37"><a href="#L37">37</a></th><td></td></tr><tr><th id="L38"><a href="#L38">38</a></th><td>        destroy: function() {</td></tr><tr><th id="L39"><a href="#L39">39</a></th><td>                var drop = $.ui.ddmanager.droppables[this.options.scope];</td></tr><tr><th id="L40"><a href="#L40">40</a></th><td>                for ( var i = 0; i &lt; drop.length; i++ )</td></tr><tr><th id="L41"><a href="#L41">41</a></th><td>                        if ( drop[i] == this )</td></tr><tr><th id="L42"><a href="#L42">42</a></th><td>                                drop.splice(i, 1);</td></tr><tr><th id="L43"><a href="#L43">43</a></th><td></td></tr><tr><th id="L44"><a href="#L44">44</a></th><td>                this.element</td></tr><tr><th id="L45"><a href="#L45">45</a></th><td>                        .removeClass("ui-droppable ui-droppable-disabled")</td></tr><tr><th id="L46"><a href="#L46">46</a></th><td>                        .removeData("droppable")</td></tr><tr><th id="L47"><a href="#L47">47</a></th><td>                        .unbind(".droppable");</td></tr><tr><th id="L48"><a href="#L48">48</a></th><td></td></tr><tr><th id="L49"><a href="#L49">49</a></th><td>                return this;</td></tr><tr><th id="L50"><a href="#L50">50</a></th><td>        },</td></tr><tr><th id="L51"><a href="#L51">51</a></th><td></td></tr><tr><th id="L52"><a href="#L52">52</a></th><td>        _setData: function(key, value) {</td></tr><tr><th id="L53"><a href="#L53">53</a></th><td></td></tr><tr><th id="L54"><a href="#L54">54</a></th><td>                if(key == 'accept') {</td></tr><tr><th id="L55"><a href="#L55">55</a></th><td>                        this.accept = $.isFunction(value) ? value : function(d) {</td></tr><tr><th id="L56"><a href="#L56">56</a></th><td>                                return d.is(value);</td></tr><tr><th id="L57"><a href="#L57">57</a></th><td>                        };</td></tr><tr><th id="L58"><a href="#L58">58</a></th><td>                }</td></tr><tr><th id="L59"><a href="#L59">59</a></th><td>                $.widget.prototype._setData.apply(this, arguments);</td></tr><tr><th id="L60"><a href="#L60">60</a></th><td>        },</td></tr><tr><th id="L61"><a href="#L61">61</a></th><td></td></tr><tr><th id="L62"><a href="#L62">62</a></th><td>        _activate: function(event) {</td></tr><tr><th id="L63"><a href="#L63">63</a></th><td>                var draggable = $.ui.ddmanager.current;</td></tr><tr><th id="L64"><a href="#L64">64</a></th><td>                if(this.options.activeClass) this.element.addClass(this.options.activeClass);</td></tr><tr><th id="L65"><a href="#L65">65</a></th><td>                (draggable &amp;&amp; this._trigger('activate', event, this.ui(draggable)));</td></tr><tr><th id="L66"><a href="#L66">66</a></th><td>        },</td></tr><tr><th id="L67"><a href="#L67">67</a></th><td></td></tr><tr><th id="L68"><a href="#L68">68</a></th><td>        _deactivate: function(event) {</td></tr><tr><th id="L69"><a href="#L69">69</a></th><td>                var draggable = $.ui.ddmanager.current;</td></tr><tr><th id="L70"><a href="#L70">70</a></th><td>                if(this.options.activeClass) this.element.removeClass(this.options.activeClass);</td></tr><tr><th id="L71"><a href="#L71">71</a></th><td>                (draggable &amp;&amp; this._trigger('deactivate', event, this.ui(draggable)));</td></tr><tr><th id="L72"><a href="#L72">72</a></th><td>        },</td></tr><tr><th id="L73"><a href="#L73">73</a></th><td></td></tr><tr><th id="L74"><a href="#L74">74</a></th><td>        _over: function(event) {</td></tr><tr><th id="L75"><a href="#L75">75</a></th><td></td></tr><tr><th id="L76"><a href="#L76">76</a></th><td>                var draggable = $.ui.ddmanager.current;</td></tr><tr><th id="L77"><a href="#L77">77</a></th><td>                if (!draggable || (draggable.currentItem || draggable.element)[0] == this.element[0]) return; // Bail if draggable and droppable are same element</td></tr><tr><th id="L78"><a href="#L78">78</a></th><td></td></tr><tr><th id="L79"><a href="#L79">79</a></th><td>                if (this.accept.call(this.element[0],(draggable.currentItem || draggable.element))) {</td></tr><tr><th id="L80"><a href="#L80">80</a></th><td>                        if(this.options.hoverClass) this.element.addClass(this.options.hoverClass);</td></tr><tr><th id="L81"><a href="#L81">81</a></th><td>                        this._trigger('over', event, this.ui(draggable));</td></tr><tr><th id="L82"><a href="#L82">82</a></th><td>                }</td></tr><tr><th id="L83"><a href="#L83">83</a></th><td></td></tr><tr><th id="L84"><a href="#L84">84</a></th><td>        },</td></tr><tr><th id="L85"><a href="#L85">85</a></th><td></td></tr><tr><th id="L86"><a href="#L86">86</a></th><td>        _out: function(event) {</td></tr><tr><th id="L87"><a href="#L87">87</a></th><td></td></tr><tr><th id="L88"><a href="#L88">88</a></th><td>                var draggable = $.ui.ddmanager.current;</td></tr><tr><th id="L89"><a href="#L89">89</a></th><td>                if (!draggable || (draggable.currentItem || draggable.element)[0] == this.element[0]) return; // Bail if draggable and droppable are same element</td></tr><tr><th id="L90"><a href="#L90">90</a></th><td></td></tr><tr><th id="L91"><a href="#L91">91</a></th><td>                if (this.accept.call(this.element[0],(draggable.currentItem || draggable.element))) {</td></tr><tr><th id="L92"><a href="#L92">92</a></th><td>                        if(this.options.hoverClass) this.element.removeClass(this.options.hoverClass);</td></tr><tr><th id="L93"><a href="#L93">93</a></th><td>                        this._trigger('out', event, this.ui(draggable));</td></tr><tr><th id="L94"><a href="#L94">94</a></th><td>                }</td></tr><tr><th id="L95"><a href="#L95">95</a></th><td></td></tr><tr><th id="L96"><a href="#L96">96</a></th><td>        },</td></tr><tr><th id="L97"><a href="#L97">97</a></th><td></td></tr><tr><th id="L98"><a href="#L98">98</a></th><td>        _drop: function(event,custom) {</td></tr><tr><th id="L99"><a href="#L99">99</a></th><td></td></tr><tr><th id="L100"><a href="#L100">100</a></th><td>                var draggable = custom || $.ui.ddmanager.current;</td></tr><tr><th id="L101"><a href="#L101">101</a></th><td>                if (!draggable || (draggable.currentItem || draggable.element)[0] == this.element[0]) return false; // Bail if draggable and droppable are same element</td></tr><tr><th id="L102"><a href="#L102">102</a></th><td></td></tr><tr><th id="L103"><a href="#L103">103</a></th><td>                var childrenIntersection = false;</td></tr><tr><th id="L104"><a href="#L104">104</a></th><td>                this.element.find(":data(droppable)").not(".ui-draggable-dragging").each(function() {</td></tr><tr><th id="L105"><a href="#L105">105</a></th><td>                        var inst = $.data(this, 'droppable');</td></tr><tr><th id="L106"><a href="#L106">106</a></th><td>                        if(inst.options.greedy &amp;&amp; $.ui.intersect(draggable, $.extend(inst, { offset: inst.element.offset() }), inst.options.tolerance)) {</td></tr><tr><th id="L107"><a href="#L107">107</a></th><td>                                childrenIntersection = true; return false;</td></tr><tr><th id="L108"><a href="#L108">108</a></th><td>                        }</td></tr><tr><th id="L109"><a href="#L109">109</a></th><td>                });</td></tr><tr><th id="L110"><a href="#L110">110</a></th><td>                if(childrenIntersection) return false;</td></tr><tr><th id="L111"><a href="#L111">111</a></th><td></td></tr><tr><th id="L112"><a href="#L112">112</a></th><td>                if(this.accept.call(this.element[0],(draggable.currentItem || draggable.element))) {</td></tr><tr><th id="L113"><a href="#L113">113</a></th><td>                        if(this.options.activeClass) this.element.removeClass(this.options.activeClass);</td></tr><tr><th id="L114"><a href="#L114">114</a></th><td>                        if(this.options.hoverClass) this.element.removeClass(this.options.hoverClass);</td></tr><tr><th id="L115"><a href="#L115">115</a></th><td>                        this._trigger('drop', event, this.ui(draggable));</td></tr><tr><th id="L116"><a href="#L116">116</a></th><td>                        return this.element;</td></tr><tr><th id="L117"><a href="#L117">117</a></th><td>                }</td></tr><tr><th id="L118"><a href="#L118">118</a></th><td></td></tr><tr><th id="L119"><a href="#L119">119</a></th><td>                return false;</td></tr><tr><th id="L120"><a href="#L120">120</a></th><td></td></tr><tr><th id="L121"><a href="#L121">121</a></th><td>        },</td></tr><tr><th id="L122"><a href="#L122">122</a></th><td></td></tr><tr><th id="L123"><a href="#L123">123</a></th><td>        ui: function(c) {</td></tr><tr><th id="L124"><a href="#L124">124</a></th><td>                return {</td></tr><tr><th id="L125"><a href="#L125">125</a></th><td>                        draggable: (c.currentItem || c.element),</td></tr><tr><th id="L126"><a href="#L126">126</a></th><td>                        helper: c.helper,</td></tr><tr><th id="L127"><a href="#L127">127</a></th><td>                        position: c.position,</td></tr><tr><th id="L128"><a href="#L128">128</a></th><td>                        absolutePosition: c.positionAbs, //deprecated</td></tr><tr><th id="L129"><a href="#L129">129</a></th><td>                        offset: c.positionAbs</td></tr><tr><th id="L130"><a href="#L130">130</a></th><td>                };</td></tr><tr><th id="L131"><a href="#L131">131</a></th><td>        }</td></tr><tr><th id="L132"><a href="#L132">132</a></th><td></td></tr><tr><th id="L133"><a href="#L133">133</a></th><td>});</td></tr><tr><th id="L134"><a href="#L134">134</a></th><td></td></tr><tr><th id="L135"><a href="#L135">135</a></th><td>$.extend($.ui.droppable, {</td></tr><tr><th id="L136"><a href="#L136">136</a></th><td>        version: "@VERSION",</td></tr><tr><th id="L137"><a href="#L137">137</a></th><td>        eventPrefix: 'drop',</td></tr><tr><th id="L138"><a href="#L138">138</a></th><td>        defaults: {</td></tr><tr><th id="L139"><a href="#L139">139</a></th><td>                accept: '*',</td></tr><tr><th id="L140"><a href="#L140">140</a></th><td>                activeClass: false,</td></tr><tr><th id="L141"><a href="#L141">141</a></th><td>                addClasses: true,</td></tr><tr><th id="L142"><a href="#L142">142</a></th><td>                greedy: false,</td></tr><tr><th id="L143"><a href="#L143">143</a></th><td>                hoverClass: false,</td></tr><tr><th id="L144"><a href="#L144">144</a></th><td>                scope: 'default',</td></tr><tr><th id="L145"><a href="#L145">145</a></th><td>                tolerance: 'intersect'</td></tr><tr><th id="L146"><a href="#L146">146</a></th><td>        }</td></tr><tr><th id="L147"><a href="#L147">147</a></th><td>});</td></tr><tr><th id="L148"><a href="#L148">148</a></th><td></td></tr><tr><th id="L149"><a href="#L149">149</a></th><td>$.ui.intersect = function(draggable, droppable, toleranceMode) {</td></tr><tr><th id="L150"><a href="#L150">150</a></th><td></td></tr><tr><th id="L151"><a href="#L151">151</a></th><td>        if (!droppable.offset) return false;</td></tr><tr><th id="L152"><a href="#L152">152</a></th><td></td></tr><tr><th id="L153"><a href="#L153">153</a></th><td>        var x1 = (draggable.positionAbs || draggable.position.absolute).left, x2 = x1 + draggable.helperProportions.width,</td></tr><tr><th id="L154"><a href="#L154">154</a></th><td>                y1 = (draggable.positionAbs || draggable.position.absolute).top, y2 = y1 + draggable.helperProportions.height;</td></tr><tr><th id="L155"><a href="#L155">155</a></th><td>        var l = droppable.offset.left, r = l + droppable.proportions.width,</td></tr><tr><th id="L156"><a href="#L156">156</a></th><td>                t = droppable.offset.top, b = t + droppable.proportions.height;</td></tr><tr><th id="L157"><a href="#L157">157</a></th><td></td></tr><tr><th id="L158"><a href="#L158">158</a></th><td>        switch (toleranceMode) {</td></tr><tr><th id="L159"><a href="#L159">159</a></th><td>                case 'fit':</td></tr><tr><th id="L160"><a href="#L160">160</a></th><td>                        return (l &lt; x1 &amp;&amp; x2 &lt; r</td></tr><tr><th id="L161"><a href="#L161">161</a></th><td>                                &amp;&amp; t &lt; y1 &amp;&amp; y2 &lt; b);</td></tr><tr><th id="L162"><a href="#L162">162</a></th><td>                        break;</td></tr><tr><th id="L163"><a href="#L163">163</a></th><td>                case 'intersect':</td></tr><tr><th id="L164"><a href="#L164">164</a></th><td>                        return (l &lt; x1 + (draggable.helperProportions.width / 2) // Right Half</td></tr><tr><th id="L165"><a href="#L165">165</a></th><td>                                &amp;&amp; x2 - (draggable.helperProportions.width / 2) &lt; r // Left Half</td></tr><tr><th id="L166"><a href="#L166">166</a></th><td>                                &amp;&amp; t &lt; y1 + (draggable.helperProportions.height / 2) // Bottom Half</td></tr><tr><th id="L167"><a href="#L167">167</a></th><td>                                &amp;&amp; y2 - (draggable.helperProportions.height / 2) &lt; b ); // Top Half</td></tr><tr><th id="L168"><a href="#L168">168</a></th><td>                        break;</td></tr><tr><th id="L169"><a href="#L169">169</a></th><td>                case 'pointer':</td></tr><tr><th id="L170"><a href="#L170">170</a></th><td>                        var draggableLeft = ((draggable.positionAbs || draggable.position.absolute).left + (draggable.clickOffset || draggable.offset.click).left),</td></tr><tr><th id="L171"><a href="#L171">171</a></th><td>                                draggableTop = ((draggable.positionAbs || draggable.position.absolute).top + (draggable.clickOffset || draggable.offset.click).top),</td></tr><tr><th id="L172"><a href="#L172">172</a></th><td>                                isOver = $.ui.isOver(draggableTop, draggableLeft, t, l, droppable.proportions.height, droppable.proportions.width);</td></tr><tr><th id="L173"><a href="#L173">173</a></th><td>                        return isOver;</td></tr><tr><th id="L174"><a href="#L174">174</a></th><td>                        break;</td></tr><tr><th id="L175"><a href="#L175">175</a></th><td>                case 'touch':</td></tr><tr><th id="L176"><a href="#L176">176</a></th><td>                        return (</td></tr><tr><th id="L177"><a href="#L177">177</a></th><td>                                        (y1 &gt;= t &amp;&amp; y1 &lt;= b) || // Top edge touching</td></tr><tr><th id="L178"><a href="#L178">178</a></th><td>                                        (y2 &gt;= t &amp;&amp; y2 &lt;= b) || // Bottom edge touching</td></tr><tr><th id="L179"><a href="#L179">179</a></th><td>                                        (y1 &lt; t &amp;&amp; y2 &gt; b)              // Surrounded vertically</td></tr><tr><th id="L180"><a href="#L180">180</a></th><td>                                ) &amp;&amp; (</td></tr><tr><th id="L181"><a href="#L181">181</a></th><td>                                        (x1 &gt;= l &amp;&amp; x1 &lt;= r) || // Left edge touching</td></tr><tr><th id="L182"><a href="#L182">182</a></th><td>                                        (x2 &gt;= l &amp;&amp; x2 &lt;= r) || // Right edge touching</td></tr><tr><th id="L183"><a href="#L183">183</a></th><td>                                        (x1 &lt; l &amp;&amp; x2 &gt; r)              // Surrounded horizontally</td></tr><tr><th id="L184"><a href="#L184">184</a></th><td>                                );</td></tr><tr><th id="L185"><a href="#L185">185</a></th><td>                        break;</td></tr><tr><th id="L186"><a href="#L186">186</a></th><td>                default:</td></tr><tr><th id="L187"><a href="#L187">187</a></th><td>                        return false;</td></tr><tr><th id="L188"><a href="#L188">188</a></th><td>                        break;</td></tr><tr><th id="L189"><a href="#L189">189</a></th><td>                }</td></tr><tr><th id="L190"><a href="#L190">190</a></th><td></td></tr><tr><th id="L191"><a href="#L191">191</a></th><td>};</td></tr><tr><th id="L192"><a href="#L192">192</a></th><td></td></tr><tr><th id="L193"><a href="#L193">193</a></th><td>/*</td></tr><tr><th id="L194"><a href="#L194">194</a></th><td>        This manager tracks offsets of draggables and droppables</td></tr><tr><th id="L195"><a href="#L195">195</a></th><td>*/</td></tr><tr><th id="L196"><a href="#L196">196</a></th><td>$.ui.ddmanager = {</td></tr><tr><th id="L197"><a href="#L197">197</a></th><td>        current: null,</td></tr><tr><th id="L198"><a href="#L198">198</a></th><td>        droppables: { 'default': [] },</td></tr><tr><th id="L199"><a href="#L199">199</a></th><td>        prepareOffsets: function(t, event) {</td></tr><tr><th id="L200"><a href="#L200">200</a></th><td></td></tr><tr><th id="L201"><a href="#L201">201</a></th><td>                var m = $.ui.ddmanager.droppables[t.options.scope];</td></tr><tr><th id="L202"><a href="#L202">202</a></th><td>                var type = event ? event.type : null; // workaround for #2317</td></tr><tr><th id="L203"><a href="#L203">203</a></th><td>                var list = (t.currentItem || t.element).find(":data(droppable)").andSelf();</td></tr><tr><th id="L204"><a href="#L204">204</a></th><td></td></tr><tr><th id="L205"><a href="#L205">205</a></th><td>                droppablesLoop: for (var i = 0; i &lt; m.length; i++) {</td></tr><tr><th id="L206"><a href="#L206">206</a></th><td></td></tr><tr><th id="L207"><a href="#L207">207</a></th><td>                        if(m[i].options.disabled || (t &amp;&amp; !m[i].accept.call(m[i].element[0],(t.currentItem || t.element)))) continue;   //No disabled and non-accepted</td></tr><tr><th id="L208"><a href="#L208">208</a></th><td>                        for (var j=0; j &lt; list.length; j++) { if(list[j] == m[i].element[0]) { m[i].proportions.height = 0; continue droppablesLoop; } }; //Filter out elements in the current dragged item</td></tr><tr><th id="L209"><a href="#L209">209</a></th><td>                        m[i].visible = m[i].element.css("display") != "none"; if(!m[i].visible) continue;                                                                       //If the element is not visible, continue</td></tr><tr><th id="L210"><a href="#L210">210</a></th><td></td></tr><tr><th id="L211"><a href="#L211">211</a></th><td>                        m[i].offset = m[i].element.offset();</td></tr><tr><th id="L212"><a href="#L212">212</a></th><td>                        m[i].proportions = { width: m[i].element[0].offsetWidth, height: m[i].element[0].offsetHeight };</td></tr><tr><th id="L213"><a href="#L213">213</a></th><td></td></tr><tr><th id="L214"><a href="#L214">214</a></th><td>                        if(type == "mousedown") m[i]._activate.call(m[i], event); //Activate the droppable if used directly from draggables</td></tr><tr><th id="L215"><a href="#L215">215</a></th><td></td></tr><tr><th id="L216"><a href="#L216">216</a></th><td>                }</td></tr><tr><th id="L217"><a href="#L217">217</a></th><td></td></tr><tr><th id="L218"><a href="#L218">218</a></th><td>        },</td></tr><tr><th id="L219"><a href="#L219">219</a></th><td>        drop: function(draggable, event) {</td></tr><tr><th id="L220"><a href="#L220">220</a></th><td></td></tr><tr><th id="L221"><a href="#L221">221</a></th><td>                var dropped = false;</td></tr><tr><th id="L222"><a href="#L222">222</a></th><td>                $.each($.ui.ddmanager.droppables[draggable.options.scope], function() {</td></tr><tr><th id="L223"><a href="#L223">223</a></th><td></td></tr><tr><th id="L224"><a href="#L224">224</a></th><td>                        if(!this.options) return;</td></tr><tr><th id="L225"><a href="#L225">225</a></th><td>                        if (!this.options.disabled &amp;&amp; this.visible &amp;&amp; $.ui.intersect(draggable, this, this.options.tolerance))</td></tr><tr><th id="L226"><a href="#L226">226</a></th><td>                                dropped = this._drop.call(this, event);</td></tr><tr><th id="L227"><a href="#L227">227</a></th><td></td></tr><tr><th id="L228"><a href="#L228">228</a></th><td>                        if (!this.options.disabled &amp;&amp; this.visible &amp;&amp; this.accept.call(this.element[0],(draggable.currentItem || draggable.element))) {</td></tr><tr><th id="L229"><a href="#L229">229</a></th><td>                                this.isout = 1; this.isover = 0;</td></tr><tr><th id="L230"><a href="#L230">230</a></th><td>                                this._deactivate.call(this, event);</td></tr><tr><th id="L231"><a href="#L231">231</a></th><td>                        }</td></tr><tr><th id="L232"><a href="#L232">232</a></th><td></td></tr><tr><th id="L233"><a href="#L233">233</a></th><td>                });</td></tr><tr><th id="L234"><a href="#L234">234</a></th><td>                return dropped;</td></tr><tr><th id="L235"><a href="#L235">235</a></th><td></td></tr><tr><th id="L236"><a href="#L236">236</a></th><td>        },</td></tr><tr><th id="L237"><a href="#L237">237</a></th><td>        drag: function(draggable, event) {</td></tr><tr><th id="L238"><a href="#L238">238</a></th><td></td></tr><tr><th id="L239"><a href="#L239">239</a></th><td>                //If you have a highly dynamic page, you might try this option. It renders positions every time you move the mouse.</td></tr><tr><th id="L240"><a href="#L240">240</a></th><td>                if(draggable.options.refreshPositions) $.ui.ddmanager.prepareOffsets(draggable, event);</td></tr><tr><th id="L241"><a href="#L241">241</a></th><td></td></tr><tr><th id="L242"><a href="#L242">242</a></th><td>                //Run through all droppables and check their positions based on specific tolerance options</td></tr><tr><th id="L243"><a href="#L243">243</a></th><td></td></tr><tr><th id="L244"><a href="#L244">244</a></th><td>                $.each($.ui.ddmanager.droppables[draggable.options.scope], function() {</td></tr><tr><th id="L245"><a href="#L245">245</a></th><td></td></tr><tr><th id="L246"><a href="#L246">246</a></th><td>                        if(this.options.disabled || this.greedyChild || !this.visible) return;</td></tr><tr><th id="L247"><a href="#L247">247</a></th><td>                        var intersects = $.ui.intersect(draggable, this, this.options.tolerance);</td></tr><tr><th id="L248"><a href="#L248">248</a></th><td></td></tr><tr><th id="L249"><a href="#L249">249</a></th><td>                        var c = !intersects &amp;&amp; this.isover == 1 ? 'isout' : (intersects &amp;&amp; this.isover == 0 ? 'isover' : null);</td></tr><tr><th id="L250"><a href="#L250">250</a></th><td>                        if(!c) return;</td></tr><tr><th id="L251"><a href="#L251">251</a></th><td></td></tr><tr><th id="L252"><a href="#L252">252</a></th><td>                        var parentInstance;</td></tr><tr><th id="L253"><a href="#L253">253</a></th><td>                        if (this.options.greedy) {</td></tr><tr><th id="L254"><a href="#L254">254</a></th><td>                                var parent = this.element.parents(':data(droppable):eq(0)');</td></tr><tr><th id="L255"><a href="#L255">255</a></th><td>                                if (parent.length) {</td></tr><tr><th id="L256"><a href="#L256">256</a></th><td>                                        parentInstance = $.data(parent[0], 'droppable');</td></tr><tr><th id="L257"><a href="#L257">257</a></th><td>                                        parentInstance.greedyChild = (c == 'isover' ? 1 : 0);</td></tr><tr><th id="L258"><a href="#L258">258</a></th><td>                                }</td></tr><tr><th id="L259"><a href="#L259">259</a></th><td>                        }</td></tr><tr><th id="L260"><a href="#L260">260</a></th><td></td></tr><tr><th id="L261"><a href="#L261">261</a></th><td>                        // we just moved into a greedy child</td></tr><tr><th id="L262"><a href="#L262">262</a></th><td>                        if (parentInstance &amp;&amp; c == 'isover') {</td></tr><tr><th id="L263"><a href="#L263">263</a></th><td>                                parentInstance['isover'] = 0;</td></tr><tr><th id="L264"><a href="#L264">264</a></th><td>                                parentInstance['isout'] = 1;</td></tr><tr><th id="L265"><a href="#L265">265</a></th><td>                                parentInstance._out.call(parentInstance, event);</td></tr><tr><th id="L266"><a href="#L266">266</a></th><td>                        }</td></tr><tr><th id="L267"><a href="#L267">267</a></th><td></td></tr><tr><th id="L268"><a href="#L268">268</a></th><td>                        this[c] = 1; this[c == 'isout' ? 'isover' : 'isout'] = 0;</td></tr><tr><th id="L269"><a href="#L269">269</a></th><td>                        this[c == "isover" ? "_over" : "_out"].call(this, event);</td></tr><tr><th id="L270"><a href="#L270">270</a></th><td></td></tr><tr><th id="L271"><a href="#L271">271</a></th><td>                        // we just moved out of a greedy child</td></tr><tr><th id="L272"><a href="#L272">272</a></th><td>                        if (parentInstance &amp;&amp; c == 'isout') {</td></tr><tr><th id="L273"><a href="#L273">273</a></th><td>                                parentInstance['isout'] = 0;</td></tr><tr><th id="L274"><a href="#L274">274</a></th><td>                                parentInstance['isover'] = 1;</td></tr><tr><th id="L275"><a href="#L275">275</a></th><td>                                parentInstance._over.call(parentInstance, event);</td></tr><tr><th id="L276"><a href="#L276">276</a></th><td>                        }</td></tr><tr><th id="L277"><a href="#L277">277</a></th><td>                });</td></tr><tr><th id="L278"><a href="#L278">278</a></th><td></td></tr><tr><th id="L279"><a href="#L279">279</a></th><td>        }</td></tr><tr><th id="L280"><a href="#L280">280</a></th><td>};</td></tr><tr><th id="L281"><a href="#L281">281</a></th><td></td></tr><tr><th id="L282"><a href="#L282">282</a></th><td>})(jQuery);</td></tr></tbody></table>
      </div>
      <div id="help">
        <strong>Note:</strong> See <a href="/wiki/TracBrowser">TracBrowser</a>
        for help on using the browser.
      </div>
      <div id="anydiff">
        <form action="/diff" method="get">
          <div class="buttons">
            <input type="hidden" name="new_path" value="/trunk/ui/ui.droppable.js" />
            <input type="hidden" name="old_path" value="/trunk/ui/ui.droppable.js" />
            <input type="hidden" name="new_rev" value="2517" />
            <input type="hidden" name="old_rev" value="2517" />
            <input type="submit" value="View changes..." title="Select paths and revs for Diff" />
          </div>
        </form>
      </div>
    </div>
    <div id="altlinks">
      <h3>Download in other formats:</h3>
      <ul>
        <li class="first">
          <a rel="nofollow" href="/browser/trunk/ui/ui.droppable.js?format=txt">Plain Text</a>
        </li><li class="last">
          <a rel="nofollow" href="/export/2847/trunk/ui/ui.droppable.js">Original Format</a>
        </li>
      </ul>
    </div>
    </div>
    <div id="footer" lang="en" xml:lang="en"><hr />
      <a id="tracpowered" href="http://trac.edgewall.org/"><img src="/chrome/common/trac_logo_mini.png" height="30" width="107" alt="Trac Powered" /></a>
      <p class="left">
        Powered by <a href="/about"><strong>Trac 0.11.1</strong></a><br />
        By <a href="http://www.edgewall.org/">Edgewall Software</a>.
      </p>
      <p class="right"></p>
    </div>
		</div>
	</div>
	<div id="footer">
		<div class="bg"></div>
		<div class="inner">
			<p>
				<span class="first">Sponsored by: </span>
				<a href="http://www.filamentgroup.com" class="block filamentgroup"><span>Filamentgroup</span></a>
				<span style="float: right; padding-right: 12px;" class="first">© 2009 Paul Bakaus and the <a href="/about">jQuery UI Team</a>.</span>
			</p>
		</div>
	</div>
	</div>
</body>
</html>